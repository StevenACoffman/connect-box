// @generated by protoc-gen-es v2.2.2 with parameter "target=ts,import_extension=none"
// @generated from file server/poll/v1/poll.proto (package server.poll.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file server/poll/v1/poll.proto.
 */
export const file_server_poll_v1_poll: GenFile = /*@__PURE__*/
  fileDesc("ChlzZXJ2ZXIvcG9sbC92MS9wb2xsLnByb3RvEg5zZXJ2ZXIucG9sbC52MSI2CgZBbnN3ZXISDgoGYW5zd2VyGAEgASgJEg8KB2NvcnJlY3QYAiABKAgSCwoDbGllGAMgASgIIk8KElF1ZXN0aW9uQW5kQW5zd2VycxIQCghRdWVzdGlvbhgBIAEoCRInCgdBbnN3ZXJzGAIgAygLMhYuc2VydmVyLnBvbGwudjEuQW5zd2VyIqMBChpHYW1lUm9vbUNyZWF0ZUV2ZW50TWVzc2FnZRIQCghSb29tQ29kZRgBIAEoCRIMCgRHYW1lGAIgASgJEj8KE1F1ZXN0aW9uc0FuZEFuc3dlcnMYAyADKAsyIi5zZXJ2ZXIucG9sbC52MS5RdWVzdGlvbkFuZEFuc3dlcnMSFQoNVGltZWREdXJhdGlvbhgEIAEoCRINCgVFcnJvchgFIAEoCSKRAgoXU3RhcnRWb3RpbmdFdmVudE1lc3NhZ2USEAoIUm9vbUNvZGUYASABKAkSDAoER2FtZRgCIAEoCRIUCgxQYXJ0aWNpcGFudHMYAyADKAkSFAoMQXVkaWVuY2VMaXN0GAQgAygJEhQKDFZvdGluZ0Nsb3NlZBgFIAEoCBIVCg1Wb3RpbmdTdGFydGVkGAYgASgIEjMKD1ZvdGluZ1N0YXJ0VGltZRgHIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASMQoNVm90aW5nRW5kVGltZRgIIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASFQoNVGltZWREdXJhdGlvbhgJIAEoCSKNAQojUGFydGljaXBhbnRBdWRpZW5jZUpvaW5FdmVudE1lc3NhZ2USEAoIUm9vbUNvZGUYASABKAkSDAoER2FtZRgCIAEoCRIQCghOaWNrbmFtZRgDIAEoCRITCgtQYXJ0aWNpcGFudBgEIAEoCBIQCghBdWRpZW5jZRgFIAEoCBINCgVFcnJvchgGIAEoCSJrCgRWb3RlEhYKDlF1ZXN0aW9uTnVtYmVyGAEgASgNEhoKElBhcnRpY2lwYW50QW5zd2VycxgCIAMoDRIXCg9QYXJ0aWNpcGFudE5hbWUYAyABKAkSFgoOUGFydGljaXBhbnRIYXQYBCABKAkicAobUGFydGljaXBhbnRWb3RlRXZlbnRNZXNzYWdlEhAKCFJvb21Db2RlGAEgASgJEgwKBEdhbWUYAiABKAkSIgoEVm90ZRgDIAEoCzIULnNlcnZlci5wb2xsLnYxLlZvdGUSDQoFRXJyb3IYBCABKAkigQEKF1N1YnNjcmliZVJlcXVlc3RNZXNzYWdlEhAKCFJvb21Db2RlGAEgASgJEgwKBEdhbWUYAiABKAkSEAoITmlja25hbWUYAyABKAkSEwoLUGFydGljaXBhbnQYBCABKAgSEAoIQXVkaWVuY2UYBSABKAgSDQoFRXJyb3IYBiABKAkingMKFFVwZGF0ZVJlc3VsdHNNZXNzYWdlEhAKCFJvb21Db2RlGAEgASgJEgwKBEdhbWUYAiABKAkSIwoFVm90ZXMYAyADKAsyFC5zZXJ2ZXIucG9sbC52MS5Wb3RlEhQKDFBhcnRpY2lwYW50cxgEIAMoCRIUCgxBdWRpZW5jZUxpc3QYBSADKAkSPwoTUXVlc3Rpb25zQW5kQW5zd2VycxgGIAMoCzIiLnNlcnZlci5wb2xsLnYxLlF1ZXN0aW9uQW5kQW5zd2VycxIUCgxWb3RpbmdDbG9zZWQYByABKAgSFQoNVm90aW5nU3RhcnRlZBgIIAEoCBIzCg9Wb3RpbmdTdGFydFRpbWUYCSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjEKDVZvdGluZ0VuZFRpbWUYCiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhUKDVRpbWVkRHVyYXRpb24YCyABKAkSGQoRRHVyYXRpb25SZW1haW5pbmcYDCABKAkSDQoFRXJyb3IYDSABKAkigAEKFUVuZFZvdGluZ0V2ZW50TWVzc2FnZRIQCghSb29tQ29kZRgBIAEoCRIMCgRHYW1lGAIgASgJEhQKDFZvdGluZ0Nsb3NlZBgDIAEoCBIxCg1Wb3RpbmdFbmRUaW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJlCh9QYXJ0aWNpcGFudEF1ZGllbmNlSm9pblJlc3BvbnNlEkIKFHVwZGF0ZVJlc3VsdHNNZXNzYWdlGAEgASgLMiQuc2VydmVyLnBvbGwudjEuVXBkYXRlUmVzdWx0c01lc3NhZ2UiXQoXUGFydGljaXBhbnRWb3RlUmVzcG9uc2USQgoUdXBkYXRlUmVzdWx0c01lc3NhZ2UYASABKAsyJC5zZXJ2ZXIucG9sbC52MS5VcGRhdGVSZXN1bHRzTWVzc2FnZSJcChZHYW1lUm9vbUNyZWF0ZVJlc3BvbnNlEkIKFHVwZGF0ZVJlc3VsdHNNZXNzYWdlGAEgASgLMiQuc2VydmVyLnBvbGwudjEuVXBkYXRlUmVzdWx0c01lc3NhZ2UiWQoTU3RhcnRWb3RpbmdSZXNwb25zZRJCChR1cGRhdGVSZXN1bHRzTWVzc2FnZRgBIAEoCzIkLnNlcnZlci5wb2xsLnYxLlVwZGF0ZVJlc3VsdHNNZXNzYWdlIlcKEUVuZFZvdGluZ1Jlc3BvbnNlEkIKFHVwZGF0ZVJlc3VsdHNNZXNzYWdlGAEgASgLMiQuc2VydmVyLnBvbGwudjEuVXBkYXRlUmVzdWx0c01lc3NhZ2UiVwoRU3Vic2NyaWJlUmVzcG9uc2USQgoUdXBkYXRlUmVzdWx0c01lc3NhZ2UYASABKAsyJC5zZXJ2ZXIucG9sbC52MS5VcGRhdGVSZXN1bHRzTWVzc2FnZTKbBQoLUG9sbFNlcnZpY2USiAEKHlBhcnRpY2lwYW50QXVkaWVuY2VKb2luUmVxdWVzdBIzLnNlcnZlci5wb2xsLnYxLlBhcnRpY2lwYW50QXVkaWVuY2VKb2luRXZlbnRNZXNzYWdlGi8uc2VydmVyLnBvbGwudjEuUGFydGljaXBhbnRBdWRpZW5jZUpvaW5SZXNwb25zZTABEm4KFlBhcnRpY2lwYW50Vm90ZVJlcXVlc3QSKy5zZXJ2ZXIucG9sbC52MS5QYXJ0aWNpcGFudFZvdGVFdmVudE1lc3NhZ2UaJy5zZXJ2ZXIucG9sbC52MS5QYXJ0aWNpcGFudFZvdGVSZXNwb25zZRJtChVHYW1lUm9vbUNyZWF0ZVJlcXVlc3QSKi5zZXJ2ZXIucG9sbC52MS5HYW1lUm9vbUNyZWF0ZUV2ZW50TWVzc2FnZRomLnNlcnZlci5wb2xsLnYxLkdhbWVSb29tQ3JlYXRlUmVzcG9uc2UwARJiChJTdGFydFZvdGluZ1JlcXVlc3QSJy5zZXJ2ZXIucG9sbC52MS5TdGFydFZvdGluZ0V2ZW50TWVzc2FnZRojLnNlcnZlci5wb2xsLnYxLlN0YXJ0Vm90aW5nUmVzcG9uc2USXAoQRW5kVm90aW5nUmVxdWVzdBIlLnNlcnZlci5wb2xsLnYxLkVuZFZvdGluZ0V2ZW50TWVzc2FnZRohLnNlcnZlci5wb2xsLnYxLkVuZFZvdGluZ1Jlc3BvbnNlEmAKEFN1YnNjcmliZVJlcXVlc3QSJy5zZXJ2ZXIucG9sbC52MS5TdWJzY3JpYmVSZXF1ZXN0TWVzc2FnZRohLnNlcnZlci5wb2xsLnYxLlN1YnNjcmliZVJlc3BvbnNlMAFCNVozZ2l0aHViLmNvbS9LaGFuL2hhY2thdGhvbi1raGFubWlnb2dvL3NlcnZlci9wb2xsL3YxYgZwcm90bzM", [file_google_protobuf_timestamp]);

/**
 * @generated from message server.poll.v1.Answer
 */
export type Answer = Message<"server.poll.v1.Answer"> & {
  /**
   * @generated from field: string answer = 1;
   */
  answer: string;

  /**
   * @generated from field: bool correct = 2;
   */
  correct: boolean;

  /**
   * @generated from field: bool lie = 3;
   */
  lie: boolean;
};

/**
 * Describes the message server.poll.v1.Answer.
 * Use `create(AnswerSchema)` to create a new message.
 */
export const AnswerSchema: GenMessage<Answer> = /*@__PURE__*/
  messageDesc(file_server_poll_v1_poll, 0);

/**
 * @generated from message server.poll.v1.QuestionAndAnswers
 */
export type QuestionAndAnswers = Message<"server.poll.v1.QuestionAndAnswers"> & {
  /**
   * @generated from field: string Question = 1;
   */
  Question: string;

  /**
   * @generated from field: repeated server.poll.v1.Answer Answers = 2;
   */
  Answers: Answer[];
};

/**
 * Describes the message server.poll.v1.QuestionAndAnswers.
 * Use `create(QuestionAndAnswersSchema)` to create a new message.
 */
export const QuestionAndAnswersSchema: GenMessage<QuestionAndAnswers> = /*@__PURE__*/
  messageDesc(file_server_poll_v1_poll, 1);

/**
 * @generated from message server.poll.v1.GameRoomCreateEventMessage
 */
export type GameRoomCreateEventMessage = Message<"server.poll.v1.GameRoomCreateEventMessage"> & {
  /**
   * @generated from field: string RoomCode = 1;
   */
  RoomCode: string;

  /**
   * @generated from field: string Game = 2;
   */
  Game: string;

  /**
   * @generated from field: repeated server.poll.v1.QuestionAndAnswers QuestionsAndAnswers = 3;
   */
  QuestionsAndAnswers: QuestionAndAnswers[];

  /**
   * @generated from field: string TimedDuration = 4;
   */
  TimedDuration: string;

  /**
   * @generated from field: string Error = 5;
   */
  Error: string;
};

/**
 * Describes the message server.poll.v1.GameRoomCreateEventMessage.
 * Use `create(GameRoomCreateEventMessageSchema)` to create a new message.
 */
export const GameRoomCreateEventMessageSchema: GenMessage<GameRoomCreateEventMessage> = /*@__PURE__*/
  messageDesc(file_server_poll_v1_poll, 2);

/**
 * @generated from message server.poll.v1.StartVotingEventMessage
 */
export type StartVotingEventMessage = Message<"server.poll.v1.StartVotingEventMessage"> & {
  /**
   * @generated from field: string RoomCode = 1;
   */
  RoomCode: string;

  /**
   * @generated from field: string Game = 2;
   */
  Game: string;

  /**
   * @generated from field: repeated string Participants = 3;
   */
  Participants: string[];

  /**
   * @generated from field: repeated string AudienceList = 4;
   */
  AudienceList: string[];

  /**
   * @generated from field: bool VotingClosed = 5;
   */
  VotingClosed: boolean;

  /**
   * @generated from field: bool VotingStarted = 6;
   */
  VotingStarted: boolean;

  /**
   * @generated from field: google.protobuf.Timestamp VotingStartTime = 7;
   */
  VotingStartTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp VotingEndTime = 8;
   */
  VotingEndTime?: Timestamp;

  /**
   * @generated from field: string TimedDuration = 9;
   */
  TimedDuration: string;
};

/**
 * Describes the message server.poll.v1.StartVotingEventMessage.
 * Use `create(StartVotingEventMessageSchema)` to create a new message.
 */
export const StartVotingEventMessageSchema: GenMessage<StartVotingEventMessage> = /*@__PURE__*/
  messageDesc(file_server_poll_v1_poll, 3);

/**
 * @generated from message server.poll.v1.ParticipantAudienceJoinEventMessage
 */
export type ParticipantAudienceJoinEventMessage = Message<"server.poll.v1.ParticipantAudienceJoinEventMessage"> & {
  /**
   * @generated from field: string RoomCode = 1;
   */
  RoomCode: string;

  /**
   * @generated from field: string Game = 2;
   */
  Game: string;

  /**
   * @generated from field: string Nickname = 3;
   */
  Nickname: string;

  /**
   * @generated from field: bool Participant = 4;
   */
  Participant: boolean;

  /**
   * @generated from field: bool Audience = 5;
   */
  Audience: boolean;

  /**
   * @generated from field: string Error = 6;
   */
  Error: string;
};

/**
 * Describes the message server.poll.v1.ParticipantAudienceJoinEventMessage.
 * Use `create(ParticipantAudienceJoinEventMessageSchema)` to create a new message.
 */
export const ParticipantAudienceJoinEventMessageSchema: GenMessage<ParticipantAudienceJoinEventMessage> = /*@__PURE__*/
  messageDesc(file_server_poll_v1_poll, 4);

/**
 * @generated from message server.poll.v1.Vote
 */
export type Vote = Message<"server.poll.v1.Vote"> & {
  /**
   * @generated from field: uint32 QuestionNumber = 1;
   */
  QuestionNumber: number;

  /**
   * @generated from field: repeated uint32 ParticipantAnswers = 2;
   */
  ParticipantAnswers: number[];

  /**
   * @generated from field: string ParticipantName = 3;
   */
  ParticipantName: string;

  /**
   * @generated from field: string ParticipantHat = 4;
   */
  ParticipantHat: string;
};

/**
 * Describes the message server.poll.v1.Vote.
 * Use `create(VoteSchema)` to create a new message.
 */
export const VoteSchema: GenMessage<Vote> = /*@__PURE__*/
  messageDesc(file_server_poll_v1_poll, 5);

/**
 * @generated from message server.poll.v1.ParticipantVoteEventMessage
 */
export type ParticipantVoteEventMessage = Message<"server.poll.v1.ParticipantVoteEventMessage"> & {
  /**
   * @generated from field: string RoomCode = 1;
   */
  RoomCode: string;

  /**
   * @generated from field: string Game = 2;
   */
  Game: string;

  /**
   * @generated from field: server.poll.v1.Vote Vote = 3;
   */
  Vote?: Vote;

  /**
   * @generated from field: string Error = 4;
   */
  Error: string;
};

/**
 * Describes the message server.poll.v1.ParticipantVoteEventMessage.
 * Use `create(ParticipantVoteEventMessageSchema)` to create a new message.
 */
export const ParticipantVoteEventMessageSchema: GenMessage<ParticipantVoteEventMessage> = /*@__PURE__*/
  messageDesc(file_server_poll_v1_poll, 6);

/**
 * @generated from message server.poll.v1.SubscribeRequestMessage
 */
export type SubscribeRequestMessage = Message<"server.poll.v1.SubscribeRequestMessage"> & {
  /**
   * @generated from field: string RoomCode = 1;
   */
  RoomCode: string;

  /**
   * @generated from field: string Game = 2;
   */
  Game: string;

  /**
   * @generated from field: string Nickname = 3;
   */
  Nickname: string;

  /**
   * @generated from field: bool Participant = 4;
   */
  Participant: boolean;

  /**
   * @generated from field: bool Audience = 5;
   */
  Audience: boolean;

  /**
   * @generated from field: string Error = 6;
   */
  Error: string;
};

/**
 * Describes the message server.poll.v1.SubscribeRequestMessage.
 * Use `create(SubscribeRequestMessageSchema)` to create a new message.
 */
export const SubscribeRequestMessageSchema: GenMessage<SubscribeRequestMessage> = /*@__PURE__*/
  messageDesc(file_server_poll_v1_poll, 7);

/**
 * @generated from message server.poll.v1.UpdateResultsMessage
 */
export type UpdateResultsMessage = Message<"server.poll.v1.UpdateResultsMessage"> & {
  /**
   * @generated from field: string RoomCode = 1;
   */
  RoomCode: string;

  /**
   * @generated from field: string Game = 2;
   */
  Game: string;

  /**
   * @generated from field: repeated server.poll.v1.Vote Votes = 3;
   */
  Votes: Vote[];

  /**
   * @generated from field: repeated string Participants = 4;
   */
  Participants: string[];

  /**
   * @generated from field: repeated string AudienceList = 5;
   */
  AudienceList: string[];

  /**
   * @generated from field: repeated server.poll.v1.QuestionAndAnswers QuestionsAndAnswers = 6;
   */
  QuestionsAndAnswers: QuestionAndAnswers[];

  /**
   * @generated from field: bool VotingClosed = 7;
   */
  VotingClosed: boolean;

  /**
   * @generated from field: bool VotingStarted = 8;
   */
  VotingStarted: boolean;

  /**
   * @generated from field: google.protobuf.Timestamp VotingStartTime = 9;
   */
  VotingStartTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp VotingEndTime = 10;
   */
  VotingEndTime?: Timestamp;

  /**
   * @generated from field: string TimedDuration = 11;
   */
  TimedDuration: string;

  /**
   * @generated from field: string DurationRemaining = 12;
   */
  DurationRemaining: string;

  /**
   * @generated from field: string Error = 13;
   */
  Error: string;
};

/**
 * Describes the message server.poll.v1.UpdateResultsMessage.
 * Use `create(UpdateResultsMessageSchema)` to create a new message.
 */
export const UpdateResultsMessageSchema: GenMessage<UpdateResultsMessage> = /*@__PURE__*/
  messageDesc(file_server_poll_v1_poll, 8);

/**
 * @generated from message server.poll.v1.EndVotingEventMessage
 */
export type EndVotingEventMessage = Message<"server.poll.v1.EndVotingEventMessage"> & {
  /**
   * @generated from field: string RoomCode = 1;
   */
  RoomCode: string;

  /**
   * @generated from field: string Game = 2;
   */
  Game: string;

  /**
   * @generated from field: bool VotingClosed = 3;
   */
  VotingClosed: boolean;

  /**
   * @generated from field: google.protobuf.Timestamp VotingEndTime = 4;
   */
  VotingEndTime?: Timestamp;
};

/**
 * Describes the message server.poll.v1.EndVotingEventMessage.
 * Use `create(EndVotingEventMessageSchema)` to create a new message.
 */
export const EndVotingEventMessageSchema: GenMessage<EndVotingEventMessage> = /*@__PURE__*/
  messageDesc(file_server_poll_v1_poll, 9);

/**
 * @generated from message server.poll.v1.ParticipantAudienceJoinResponse
 */
export type ParticipantAudienceJoinResponse = Message<"server.poll.v1.ParticipantAudienceJoinResponse"> & {
  /**
   * @generated from field: server.poll.v1.UpdateResultsMessage updateResultsMessage = 1;
   */
  updateResultsMessage?: UpdateResultsMessage;
};

/**
 * Describes the message server.poll.v1.ParticipantAudienceJoinResponse.
 * Use `create(ParticipantAudienceJoinResponseSchema)` to create a new message.
 */
export const ParticipantAudienceJoinResponseSchema: GenMessage<ParticipantAudienceJoinResponse> = /*@__PURE__*/
  messageDesc(file_server_poll_v1_poll, 10);

/**
 * @generated from message server.poll.v1.ParticipantVoteResponse
 */
export type ParticipantVoteResponse = Message<"server.poll.v1.ParticipantVoteResponse"> & {
  /**
   * @generated from field: server.poll.v1.UpdateResultsMessage updateResultsMessage = 1;
   */
  updateResultsMessage?: UpdateResultsMessage;
};

/**
 * Describes the message server.poll.v1.ParticipantVoteResponse.
 * Use `create(ParticipantVoteResponseSchema)` to create a new message.
 */
export const ParticipantVoteResponseSchema: GenMessage<ParticipantVoteResponse> = /*@__PURE__*/
  messageDesc(file_server_poll_v1_poll, 11);

/**
 * @generated from message server.poll.v1.GameRoomCreateResponse
 */
export type GameRoomCreateResponse = Message<"server.poll.v1.GameRoomCreateResponse"> & {
  /**
   * @generated from field: server.poll.v1.UpdateResultsMessage updateResultsMessage = 1;
   */
  updateResultsMessage?: UpdateResultsMessage;
};

/**
 * Describes the message server.poll.v1.GameRoomCreateResponse.
 * Use `create(GameRoomCreateResponseSchema)` to create a new message.
 */
export const GameRoomCreateResponseSchema: GenMessage<GameRoomCreateResponse> = /*@__PURE__*/
  messageDesc(file_server_poll_v1_poll, 12);

/**
 * @generated from message server.poll.v1.StartVotingResponse
 */
export type StartVotingResponse = Message<"server.poll.v1.StartVotingResponse"> & {
  /**
   * @generated from field: server.poll.v1.UpdateResultsMessage updateResultsMessage = 1;
   */
  updateResultsMessage?: UpdateResultsMessage;
};

/**
 * Describes the message server.poll.v1.StartVotingResponse.
 * Use `create(StartVotingResponseSchema)` to create a new message.
 */
export const StartVotingResponseSchema: GenMessage<StartVotingResponse> = /*@__PURE__*/
  messageDesc(file_server_poll_v1_poll, 13);

/**
 * @generated from message server.poll.v1.EndVotingResponse
 */
export type EndVotingResponse = Message<"server.poll.v1.EndVotingResponse"> & {
  /**
   * @generated from field: server.poll.v1.UpdateResultsMessage updateResultsMessage = 1;
   */
  updateResultsMessage?: UpdateResultsMessage;
};

/**
 * Describes the message server.poll.v1.EndVotingResponse.
 * Use `create(EndVotingResponseSchema)` to create a new message.
 */
export const EndVotingResponseSchema: GenMessage<EndVotingResponse> = /*@__PURE__*/
  messageDesc(file_server_poll_v1_poll, 14);

/**
 * @generated from message server.poll.v1.SubscribeResponse
 */
export type SubscribeResponse = Message<"server.poll.v1.SubscribeResponse"> & {
  /**
   * @generated from field: server.poll.v1.UpdateResultsMessage updateResultsMessage = 1;
   */
  updateResultsMessage?: UpdateResultsMessage;
};

/**
 * Describes the message server.poll.v1.SubscribeResponse.
 * Use `create(SubscribeResponseSchema)` to create a new message.
 */
export const SubscribeResponseSchema: GenMessage<SubscribeResponse> = /*@__PURE__*/
  messageDesc(file_server_poll_v1_poll, 15);

/**
 * @generated from service server.poll.v1.PollService
 */
export const PollService: GenService<{
  /**
   * @generated from rpc server.poll.v1.PollService.ParticipantAudienceJoinRequest
   */
  participantAudienceJoinRequest: {
    methodKind: "server_streaming";
    input: typeof ParticipantAudienceJoinEventMessageSchema;
    output: typeof ParticipantAudienceJoinResponseSchema;
  },
  /**
   * @generated from rpc server.poll.v1.PollService.ParticipantVoteRequest
   */
  participantVoteRequest: {
    methodKind: "unary";
    input: typeof ParticipantVoteEventMessageSchema;
    output: typeof ParticipantVoteResponseSchema;
  },
  /**
   * @generated from rpc server.poll.v1.PollService.GameRoomCreateRequest
   */
  gameRoomCreateRequest: {
    methodKind: "server_streaming";
    input: typeof GameRoomCreateEventMessageSchema;
    output: typeof GameRoomCreateResponseSchema;
  },
  /**
   * @generated from rpc server.poll.v1.PollService.StartVotingRequest
   */
  startVotingRequest: {
    methodKind: "unary";
    input: typeof StartVotingEventMessageSchema;
    output: typeof StartVotingResponseSchema;
  },
  /**
   * @generated from rpc server.poll.v1.PollService.EndVotingRequest
   */
  endVotingRequest: {
    methodKind: "unary";
    input: typeof EndVotingEventMessageSchema;
    output: typeof EndVotingResponseSchema;
  },
  /**
   * @generated from rpc server.poll.v1.PollService.SubscribeRequest
   */
  subscribeRequest: {
    methodKind: "server_streaming";
    input: typeof SubscribeRequestMessageSchema;
    output: typeof SubscribeResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_server_poll_v1_poll, 0);

